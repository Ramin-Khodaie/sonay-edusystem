# stage1 as builder
FROM node:16-alpine  as builder

# copy the package.json to install dependencies
COPY package.json package-lock.json ./

# Install the dependencies and make the folder
RUN npm install && mkdir /nodeserver

WORKDIR /nodeserver

COPY . .
RUN npm run build


FROM nginx:alpine

#!/bin/sh

# COPY ./.nginx/nginx.conf /etc/nginx/nginx.conf

## Remove default nginx index page
RUN rm -rf /usr/share/nginx/html/*

# Copy from the stahg 1
COPY --from=builder /nodeserver/build /usr/share/nginx/html
RUN rm -rf /etc/nginx/conf.d/default.conf
COPY --from=builder /nodeserver/default.conf /etc/nginx/conf.d

EXPOSE 80 

ENTRYPOINT ["nginx", "-g", "daemon off;"]

# docker run --name noddd -p 80:80 -d nodeserver